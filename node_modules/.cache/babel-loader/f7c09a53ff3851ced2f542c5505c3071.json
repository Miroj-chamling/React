{"ast":null,"code":"var _jsxFileName = \"/Users/miroj/Desktop/my-app/src/hooks/button.js\",\n    _s = $RefreshSig$();\n\n//usestate() hooks\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hooks() {\n  _s();\n\n  //this is how it is done in the class based components.\n  // const [state,setState] = useState({count : 4, theme : 'green'});\n  // const count = state.count  //this way we can use the function parameter to the program.\n  // const theme = state.theme\n  // function incrementState()\n  // {\n  //     setState(prevState => {\n  //         return{...prevState ,count : prevState.count +1}\n  //     })\n  // }\n  // function decrementState()\n  // {\n  //     setState(prevState => {\n  //         return{\n  //                ...prevState, count : prevState.count -1\n  //             }\n  //     })\n  // }\n  //use state hooks\n  //this is much easier way to manage state and hooks using\n  //use state hooks.\n  const [state, setstate] = useState(4);\n  const [theme, setTheme] = useState('green');\n\n  function decrementState() {\n    setstate(prevState => prevState - 1);\n\n    if (setstate < 4) {\n      setTheme('red');\n    }\n  }\n\n  function incrementState() {\n    setstate(prevState => prevState + 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrementState,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: theme\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementState,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Hooks, \"GOb8P2tbovQNOH6PdXGRHXnYKjQ=\");\n\n_c = Hooks;\nexport default Hooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hooks\");","map":{"version":3,"sources":["/Users/miroj/Desktop/my-app/src/hooks/button.js"],"names":["React","useState","Hooks","state","setstate","theme","setTheme","decrementState","prevState","incrementState"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,KAAT,GACA;AAAA;;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,OAAD,CAAjC;;AAEA,WAASM,cAAT,GACA;AACIH,IAAAA,QAAQ,CAACI,SAAS,IAAIA,SAAS,GAAE,CAAzB,CAAR;;AACA,QAAGJ,QAAQ,GAAG,CAAd,EACA;AACIE,MAAAA,QAAQ,CAAE,KAAF,CAAR;AACH;AACJ;;AAED,WAASG,cAAT,GACA;AACIL,IAAAA,QAAQ,CAACI,SAAS,IAAIA,SAAS,GAAC,CAAxB,CAAR;AACH;;AAED,sBACI;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAID,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAOJ;AAAP;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA,gBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA;AAAQ,MAAA,OAAO,EAAII,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAlDQP,K;;KAAAA,K;AAoDT,eAAeA,KAAf","sourcesContent":["//usestate() hooks\n\nimport React from 'react';\nimport { useState } from 'react';\n\nfunction Hooks()\n{\n    //this is how it is done in the class based components.\n    // const [state,setState] = useState({count : 4, theme : 'green'});\n    // const count = state.count  //this way we can use the function parameter to the program.\n    // const theme = state.theme\n    // function incrementState()\n    // {\n    //     setState(prevState => {\n    //         return{...prevState ,count : prevState.count +1}\n    //     })\n    // }\n\n    // function decrementState()\n    // {\n    //     setState(prevState => {\n    //         return{\n    //                ...prevState, count : prevState.count -1\n    //             }\n    //     })\n    // }\n\n    //use state hooks\n    //this is much easier way to manage state and hooks using\n    //use state hooks.\n    const [state ,setstate] = useState(4);\n    const [theme,setTheme] = useState('green');\n\n    function decrementState()\n    {\n        setstate(prevState => prevState -1)\n        if(setstate < 4)\n        {\n            setTheme( 'red')\n        }\n    }\n\n    function incrementState()\n    {\n        setstate(prevState => prevState+1)\n    }\n\n    return(\n        <div>\n        <button onClick = {decrementState}>-</button>\n        <span>{state}</span>\n        <span>{theme}</span>\n        <button onClick = {incrementState}>+</button>\n        </div>\n    )\n}\n\nexport default Hooks;"]},"metadata":{},"sourceType":"module"}