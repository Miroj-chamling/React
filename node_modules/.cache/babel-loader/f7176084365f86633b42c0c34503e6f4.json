{"ast":null,"code":"var _jsxFileName = \"/Users/miroj/Desktop/React/src/hooks/widnow.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Windows() {\n  _s();\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: windowWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Windows, \"XPjwYFA2mnyOQTDQkTW889KQ99c=\");\n\n_c = Windows;\n\nvar _c;\n\n$RefreshReg$(_c, \"Windows\");","map":{"version":3,"sources":["/Users/miroj/Desktop/React/src/hooks/widnow.js"],"names":["useEffect","useState","React","Windows","windowWidth","setWindowWidth","window","innerWidth","addEventListener","handleResize","cleanup","input"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,OAAT,GACf;AAAA;;AACI,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAA9C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACA,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA,sBACI;AAAA,2BACA;AAAA,6BACI;AAAA,kBAAKP;AAAL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAQH;;GAnBuBD,O;;KAAAA,O","sourcesContent":["import { useEffect, useState } from \"react\";\nimport React from 'react';\n\nexport default function Windows()\n{\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', handleResize);\n        return () => {\n            cleanup\n        }\n    }, [input])\n\n    return(\n        <>\n        <div>\n            <h1>{windowWidth}</h1>\n        </div>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}